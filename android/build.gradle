def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: 'com.android.library'

// Apply the ImgLy-Plugin
apply plugin: 'ly.img.android.sdk'
apply plugin: 'kotlin-android'
imglyConfig {
    pesdk {
        enabled true
    }

    useInheritanceDependencies true

    modules {
        include 'ui:core'
        include 'backend:config-loader'
    }
}

def MIN_LY_IMG_ANDROID_SDK_PLUGIN_VERSION = "9.1.0"

task checkVersion {
    if (imglyConfig.convertToVersionNumber(imglyConfig.getVersion()) < imglyConfig.convertToVersionNumber(MIN_LY_IMG_ANDROID_SDK_PLUGIN_VERSION)) {
        String WRONG_VERSION = "" +
            "┌───────────────────────────────────────────────────────────────────────┐\n"+
            "│ PhotoEditor SDK update required!                                      │\n"+
            "│ Please update the plugin version in your 'android/build.gradle' file. │\n"+
            "│ Minimum required dependency: 'ly.img.android.sdk:plugin:${MIN_LY_IMG_ANDROID_SDK_PLUGIN_VERSION}'        │\n"+
            "│ Your are currently using:    'ly.img.android.sdk:plugin:${imglyConfig.getVersion()}'        │\n"+
            "└───────────────────────────────────────────────────────────────────────┘\n"

        throw new GradleScriptException(WRONG_VERSION, new IllegalArgumentException(WRONG_VERSION))
    }
}

preBuild.dependsOn checkVersion

android {
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileSdkVersion safeExtGet('compileSdkVersion', 30)
    buildToolsVersion safeExtGet('buildToolsVersion', '30.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 19)
        targetSdkVersion safeExtGet('targetSdkVersion', 30)
        versionCode 1
        versionName "1.0"
        ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        all {
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    compileOnly "ly.img.android.sdk:serializer:$imglyConfig.version"
    implementation 'com.tencent.liteav:LiteAVSDK_TRTC:latest.release'
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "com.squareup.okhttp3:logging-interceptor:$LOGGING_INTERCEPTOR_VERSION"
    api "com.squareup.retrofit2:converter-gson:$CONVERTER_GSON_VERSION"
    api "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    api "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    api "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    api "com.github.ctiao:DanmakuFlameMaster:$DANMAKU_FLAME_MASTER_VERSION"
    api "de.hdodenhof:circleimageview:$CIRCLEIMAGEVIEW_VERSION"
    api "com.google.code.gson:gson:$GSON_VERSION"
    api "com.blankj:utilcode:$UTIL_CODE_VERSION"
    api rootProject.ext.liteavSdk
    api rootProject.ext.imSdk
    api project(':Debug')
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android.material:material:1.0.0'
    api 'androidx.appcompat:appcompat:1.0.0'
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'androidx.multidex:multidex:2.0.0'
}
